name: check jobs output 
on:
  push:
    branches:
    - jobOutput
  pull_request:
    branches:
    - jobOutput
jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step0.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        #old version from July 2023 - didn't work
        #creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.PWD }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
        creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.PWD }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'

    - name: Checkout
      uses: actions/checkout@v3
      
    - id: step0
      uses: azure/CLI@v1.0.7
      with:
        inlineScript: |
          export test="$(az group show --name testRG)"
          test="${CHANGELOG//'%'/'%25'}"
          test="${CHANGELOG//$'\n'/'%0A'}"
          test="${CHANGELOG//$'\r'/'%0D'}"
          #echo "test<<EOF" >> $GITHUB_OUTPUT
          #echo "$(az group show --name testRG)" >> $GITHUB_OUTPUT
          #echo "EOF" >> $GITHUB_OUTPUT
          #test=$(az group show --name testRG)
          #echo "$test"
          #echo "::set-output name=test::$test"
          #echo "test=$test" >> $GITHUB_ENV
          echo "test=$test" >> $GITHUB_OUTPUT
          
    - id: step1
      uses: azure/CLI@v1.0.7
      with:
        inlineScript: |
          echo "${{ steps.step0.outputs.test }}"
    - id: step2
      uses: azure/CLI@v1.0.7
      with:
        inlinescript: |
          echo "test=$(echo "world")" >> $GITHUB_OUTPUT
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
    - run: echo ${{needs.job1.outputs.output1}}
